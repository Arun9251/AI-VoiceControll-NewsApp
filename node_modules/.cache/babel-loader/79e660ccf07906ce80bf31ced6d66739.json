{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruns\\\\Desktop\\\\react20\\\\ALAN-AI-NEWS-APP-master\\\\src\\\\components\\\\NewsCards\\\\NewsCards.js\";\nimport React from 'react';\nimport NewsCard from \"../NewsCard/NewsCard\";\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles.js\";\nconst infoCards = [{\n  color: '#00838f',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN'\n}];\n\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/React.createElement(Grow, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, infoCards.map(infoCard => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      className: classes.infoCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      style: {\n        backgroundColor: infoCard.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, infoCard.title), infoCard.info ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }, infoCard.title.split(' ')[2], /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }\n    }), infoCard.info)) : null, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }, \"Try saying:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 74\n      }\n    }, infoCard.text)))))));\n  }\n\n  return /*#__PURE__*/React.createElement(Grow, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, articles.map((article, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NewsCard, {\n    article: article,\n    activeArticle: activeArticle,\n    i: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default NewsCards;","map":{"version":3,"sources":["C:/Users/aruns/Desktop/react20/ALAN-AI-NEWS-APP-master/src/components/NewsCards/NewsCards.js"],"names":["React","NewsCard","Grid","Grow","Typography","useStyles","infoCards","color","title","text","info","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,UAApB,QAAqC,mBAArC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,MAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,aAA3B;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,oBAA3B;AAAiDE,EAAAA,IAAI,EAAE,uEAAvD;AAAgID,EAAAA,IAAI,EAAE;AAAtI,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,eAA3B;AAA4CE,EAAAA,IAAI,EAAE,sDAAlD;AAA0GD,EAAAA,IAAI,EAAE;AAAhH,CAHc,EAId;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,iBAA3B;AAA8CE,EAAAA,IAAI,EAAE,wDAApD;AAA8GD,EAAAA,IAAI,EAAE;AAApH,CAJc,CAAlB;;AASA,MAAME,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA+B;AAC7C,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,MAAG,CAACO,QAAQ,CAACG,MAAb,EAAoB;AAChB,wBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAED,OAAO,CAACE,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAA8C,MAAA,UAAU,EAAC,SAAzD;AAAmE,MAAA,OAAO,EAAE,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,SAAS,CAACW,GAAV,CAAeC,QAAD,iBACX,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAwC,MAAA,SAAS,EAAEJ,OAAO,CAACI,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACK,IAAxB;AAA8B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAEF,QAAQ,CAACX;AAA3B,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BW,QAAQ,CAACV,KAAnC,CADJ,EAGQU,QAAQ,CAACR,IAAT,gBACG,oBAAC,UAAD;AACH,MAAA,OAAO,EAAC,IADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCQ,QAAQ,CAACV,KAAT,CAAea,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CADD,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGCH,QAAQ,CAACR,IAHV,CAFG,CADH,GAO0B,IAVlC,eAWQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC,eAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIQ,QAAQ,CAACT,IAAb,CAAzC,CAXR,CADJ,CADH,CADL,CADA,CADJ;AAuBH;;AACD,sBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEK,OAAO,CAACE,SAAzB;AAAoC,IAAA,SAAS,MAA7C;AAA8C,IAAA,UAAU,EAAC,SAAzD;AAAmE,IAAA,OAAO,EAAE,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECJ,QAAQ,CAACK,GAAT,CAAa,CAACK,OAAD,EAASC,CAAT,kBACV,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,KAAK,EAAI;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAGF,OAApB;AAA6B,IAAA,aAAa,EAAET,aAA5C;AAA2D,IAAA,CAAC,EAAEU,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADH,CAFD,CADJ,CADJ;AAcH,CA1CD;;AA4CA,eAAeZ,SAAf","sourcesContent":["import React from 'react'\r\nimport NewsCard from \"../NewsCard/NewsCard\"\r\nimport {Grid, Grow, Typography} from \"@material-ui/core\"\r\nimport useStyles from \"./styles.js\"\r\n\r\n\r\n\r\nconst infoCards = [\r\n    { color: '#00838f', title: 'Latest News', text: 'Give me the latest news' },\r\n    { color: '#1565c0', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\r\n    { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with PlayStation 5' },\r\n    { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN' },\r\n  ];\r\n\r\n\r\n\r\nconst NewsCards = ({articles, activeArticle}) => {\r\n    const classes = useStyles();\r\n\r\n    if(!articles.length){\r\n        return(\r\n            <Grow in>\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                {infoCards.map((infoCard) => (\r\n                    <Grid item xs={12} sm={6} md={4} lg={3} className={classes.infoCard}>\r\n                        <div className={classes.card} style={{backgroundColor: infoCard.color}}>\r\n                            <Typography variant=\"h5\">{infoCard.title}</Typography>\r\n                            {\r\n                                infoCard.info \r\n                                ? (<Typography \r\n                                variant=\"h6\">\r\n                                <strong>\r\n                                {infoCard.title.split(' ')[2]}\r\n                                <br/>\r\n                                {infoCard.info}\r\n                                </strong></Typography>) : null}\r\n                                <Typography variant=\"h6\">Try saying:<br/><i>{infoCard.text}</i></Typography>\r\n                        </div>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            </Grow>\r\n             )\r\n    }\r\n    return (\r\n        <Grow in>\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n            \r\n            {articles.map((article,i) => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} style = {{display: 'flex'}}>\r\n                <NewsCard article= {article} activeArticle={activeArticle} i={i}/>\r\n                </Grid>\r\n          \r\n         \r\n           ))}\r\n           </Grid>\r\n           </Grow>\r\n    )\r\n}\r\n\r\nexport default NewsCards\r\n"]},"metadata":{},"sourceType":"module"}