{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aruns\\\\Desktop\\\\react20\\\\ALAN-AI-NEWS-APP-master\\\\src\\\\components\\\\NewsCard\\\\NewsCard.js\";\nimport React, { useState, useEffect, createRef } from 'react';\nimport { Card, CardActions, CardActionArea, CardContent, CardMedia, Button, Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport classNames from \"classnames\";\n\nconst NewsCard = ({\n  article: {\n    description,\n    publishedAt,\n    source,\n    title,\n    url,\n    urlToImage\n  },\n  i,\n  activeArticle\n}) => {\n  const classes = useStyles(); //this is working now as a hook\n\n  const [elRefs, setElRefs] = useState([]);\n\n  const scrollToRef = ref => window.scroll(0, ref.current.offset - 50);\n\n  useEffect(() => {\n    setElRefs(refs => Array(20).fill().map((_, j) => refs[j] || createRef()));\n  }, []);\n  useEffect(() => {\n    if (i === activeArticle && elRefs[activeArticle]) {\n      scrollToRef(elRefs[activeArticle]);\n    }\n  }, [i, activeArticle, elRefs]);\n  return /*#__PURE__*/React.createElement(Card, {\n    ref: elRefs[i],\n    className: classNames(classes.card, activeArticle === i ? classes.activeCard : null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    href: url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: urlToImage || 'http://i.huffpost.com/gen/4707746/images/o-BREAKING-NEWS-facebook.jpg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }\n  }, new Date(publishedAt).toDateString()), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  }, source.name)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }\n  }, title), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }\n  }, description))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }\n  }, \"Learn More\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }, i + 1)));\n};\n\nexport default NewsCard;","map":{"version":3,"sources":["C:/Users/aruns/Desktop/react20/ALAN-AI-NEWS-APP-master/src/components/NewsCard/NewsCard.js"],"names":["React","useState","useEffect","createRef","Card","CardActions","CardActionArea","CardContent","CardMedia","Button","Typography","useStyles","classNames","NewsCard","article","description","publishedAt","source","title","url","urlToImage","i","activeArticle","classes","elRefs","setElRefs","scrollToRef","ref","window","scroll","current","offset","refs","Array","fill","map","_","j","card","activeCard","media","details","Date","toDateString","name","cardActions"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, createRef} from 'react'\r\nimport {Card, CardActions, CardActionArea,CardContent,CardMedia,Button,Typography} from \"@material-ui/core\"\r\nimport useStyles from \"./styles\"\r\nimport classNames from \"classnames\"\r\n\r\n\r\nconst NewsCard = ({article:{ description, publishedAt, source, title, url, urlToImage}, i, activeArticle}) => {\r\n    const classes = useStyles(); //this is working now as a hook\r\n    const [elRefs, setElRefs] = useState([]);\r\n    const scrollToRef = (ref) => window.scroll(0, ref.current.offset -50);\r\n\r\n    useEffect(() => {\r\n        setElRefs((refs) => Array(20).fill().map((_,j) => refs[j] || createRef()))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(i === activeArticle && elRefs[activeArticle]){\r\n            scrollToRef(elRefs[activeArticle])\r\n        }\r\n    }, [i, activeArticle, elRefs])\r\n\r\n    return (\r\n        <Card ref={elRefs[i]} className={ classNames(classes.card, activeArticle === i ? classes.activeCard : null )}>\r\n           <CardActionArea href={url} target=\"_blank\">\r\n              <CardMedia className={classes.media} image={urlToImage || 'http://i.huffpost.com/gen/4707746/images/o-BREAKING-NEWS-facebook.jpg'}/>\r\n               <div className={classes.details}>\r\n                 <Typography variant=\"body2\" color = \"textSecondary\" component=\"h2\">{(new Date(publishedAt)).toDateString()}</Typography>\r\n                 <Typography variant=\"body2\" color = \"textSecondary\" component=\"h2\">{source.name}</Typography>\r\n               </div>\r\n               <Typography className={classes.title} gutterBottom variant=\"h5\">{title}</Typography>\r\n               <CardContent>\r\n                 <Typography variant = \"body2\" color = \"textSecondary\"component=\"p\">{description}</Typography>\r\n\r\n               </CardContent>\r\n           </CardActionArea>\r\n           <CardActions className={classes.cardActions}>\r\n             <Button size=\"small\" color = \"primary\">Learn More</Button>\r\n             <Typography variant=\"h5\" color=\"textSecondary\">{i + 1}</Typography>\r\n           </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewsCard;\r\n"]},"metadata":{},"sourceType":"module"}